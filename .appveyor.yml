version: '{build}'

cache:
 - x86_64-8.1.0-release-posix-seh-rt_v6-rev0.7z -> .appveyor.yml
 - i686-8.1.0-release-posix-dwarf-rt_v6-rev0.7z -> .appveyor.yml
 - Nim -> .appveyor.yml

matrix:
  # We always want 32 and 64-bit compilation
  fast_finish: false

platform:
  - x86
  - x64

install:
  - setlocal EnableExtensions EnableDelayedExpansion

  - IF "%PLATFORM%" == "x86" (
      SET "MINGW_ARCHIVE=i686-8.1.0-release-posix-dwarf-rt_v6-rev0.7z" &
      SET "MINGW_URL=https://sourceforge.net/projects/mingw-w64/files/Toolchains%%20targetting%%20Win32/Personal%%20Builds/mingw-builds/8.1.0/threads-posix/dwarf/i686-8.1.0-release-posix-dwarf-rt_v6-rev0.7z" &
      SET "MINGW_DIR=mingw32"
    ) ELSE (
      IF "%PLATFORM%" == "x64" (
        SET "MINGW_ARCHIVE=x86_64-8.1.0-release-posix-seh-rt_v6-rev0.7z" &
        SET "MINGW_URL=https://sourceforge.net/projects/mingw-w64/files/Toolchains%%20targetting%%20Win64/Personal%%20Builds/mingw-builds/8.1.0/threads-posix/seh/x86_64-8.1.0-release-posix-seh-rt_v6-rev0.7z" &
        SET "MINGW_DIR=mingw64"
      ) else (
        echo "Unknown platform"
      )
    )

  - SET PATH=%CD%\%MINGW_DIR%\bin;%CD%\Nim\bin;%PATH%

  # Unpack mingw
  - IF NOT EXIST "%MINGW_ARCHIVE%" appveyor DownloadFile "%MINGW_URL%" -FileName "%MINGW_ARCHIVE%"
  - 7z x -y "%MINGW_ARCHIVE%" > nul

    # build nim from our own branch - this to avoid the day-to-day churn and
    # regressions of the fast-paced Nim development while maintaining the
    # flexibility to apply patches
  - SET "NEED_REBUILD="

  - IF NOT EXIST "Nim\\.git\\" (
      git clone --depth 1 https://github.com/nim-lang/Nim.git
    ) ELSE (
      ( cd Nim ) &
      ( git pull ) &
      ( cd .. )
    )

  # Rebuild Nim if HEAD has moved or if we don't yet have a cached version
  - IF NOT EXIST "Nim\\ver.txt" (
      SET NEED_REBUILD=1
    ) ELSE (
      ( CD Nim ) &
      ( git rev-parse HEAD > ..\\cur_ver.txt ) &
      ( fc ver.txt ..\\cur_ver.txt > nul ) &
      ( IF NOT ERRORLEVEL == 0 SET NEED_REBUILD=1 ) &
      ( cd .. )
    )

  - IF NOT EXIST "Nim\\bin\\nim.exe" SET NEED_REBUILD=1
  - IF NOT EXIST "Nim\\bin\\nimble.exe" SET NEED_REBUILD=1

  # after building nim, wipe csources to save on cache space
  - IF DEFINED NEED_REBUILD (
      cd Nim &
      ( IF EXIST "csources" rmdir /s /q csources ) &
      git clone --depth 1 https://github.com/nim-lang/csources &
      cd csources &
      ( IF "%PLATFORM%" == "x64" ( build64.bat > nul ) else ( build.bat > nul ) ) &
      cd .. &
      bin\nim c --verbosity:0 --hints:off koch &
      koch boot -d:release --verbosity:0 --hints:off &
      koch nimble > nul &
      git rev-parse HEAD > ver.txt &
      rmdir /s /q csources
    )

build_script:
  - cd C:\projects\%APPVEYOR_PROJECT_SLUG%
  - nimble install -y > nul

test_script:
  - nimble test

deploy: off
